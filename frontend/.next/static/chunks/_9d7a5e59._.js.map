{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/okay/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://F%3A/okay/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://F%3A/okay/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://F%3A/okay/frontend/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file://F%3A/okay/frontend/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file://F%3A/okay/frontend/app/symptoms/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Loader2, ArrowLeft, Brain, Thermometer, Stethoscope, AlertCircle } from \"lucide-react\"\n\ninterface SymptomAnalysis {\n  severity: 'low' | 'medium' | 'high';\n  possibleConditions: string[];\n  recommendations: string[];\n  urgencyLevel: string;\n  recommendedDoctorTypes: string[];\n}\n\nexport default function SymptomsPage() {\n  const [symptoms, setSymptoms] = useState(\"\")\n  const [analysis, setAnalysis] = useState<SymptomAnalysis | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [activeTab, setActiveTab] = useState(\"describe\")\n\n  const commonSymptoms = [\n    { name: \"Fever\", icon: <Thermometer className=\"h-5 w-5\" /> },\n    { name: \"Headache\", icon: <Brain className=\"h-5 w-5\" /> },\n    { name: \"Cough\", icon: <Stethoscope className=\"h-5 w-5\" /> },\n    { name: \"Stomach Pain\", icon: <Stethoscope className=\"h-5 w-5\" /> },\n    { name: \"Dizziness\", icon: <Brain className=\"h-5 w-5\" /> },\n    { name: \"Fatigue\", icon: <Stethoscope className=\"h-5 w-5\" /> },\n  ]\n\n  const handleSymptomClick = (symptom: string) => {\n    setSymptoms((prev) => (prev ? `${prev}, ${symptom}` : symptom))\n  }\n\n  const analyzeSymptoms = async () => {\n    if (!symptoms.trim()) return\n\n    setIsLoading(true)\n    setError(null);\n\n    try {\n      const response = await fetch('http://127.0.0.1:11434/api/generate', {\n        // Ensure your local server is running and accessible at this address.\n        // Also, check the API endpoint and CORS configuration if needed.\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          model: 'gemma3:1b',\n          prompt: `\n            As a medical AI assistant, analyze these symptoms and provide a structured analysis.\n            Consider these available doctor types: ${commonSymptoms.map(symptom => symptom.name).join(', ')}.\n\n            Format your response EXACTLY as JSON with this structure:\n            {\n              \"severity\": \"low/medium/high\",\n              \"possibleConditions\": [\"condition1\", \"condition2\"],\n              \"recommendations\": [\"recommendation1\", \"recommendation2\"],\n              \"urgencyLevel\": \"description of urgency\",\n              \"recommendedDoctorTypes\": [\"doctor type 1\", \"doctor type 2\"]\n            }\n\n            Symptoms: ${symptoms}\n\n            Rules:\n            1. recommendedDoctorTypes must ONLY include values from the available types listed above\n            2. severity must ONLY be \"low\", \"medium\", or \"high\"\n            3. Include at least 2 recommendations\n            4. Make urgencyLevel clear and actionable\n            5. If symptoms are severe, recommend immediate medical attention\n          `,\n          stream: false,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      let responseText = data.response;\n\n      // Log the raw response for debugging\n      console.log('Raw Ollama Response:', responseText);\n\n      // Remove backticks and everything after the JSON object\n      responseText = responseText.replace(/```json\\s*|```|\\n\\n.*$/gs, '').trim();\n\n      // Log the processed response before parsing\n      console.log('Processed Ollama Response:', responseText);\n\n      try {\n        const analysis = JSON.parse(responseText);\n        setAnalysis(analysis);\n        setActiveTab(\"results\");\n      } catch (error) {\n        setError('Failed to parse AI analysis response. Please check the console for details.');\n        console.error('Error parsing Ollama response:', error);\n        console.error('Invalid JSON:', responseText); // Log the invalid JSON\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to analyze symptoms. Please try again.');\n      console.error('Error analyzing symptoms:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-start py-24 px-6\">\n      <div className=\"w-full max-w-3xl space-y-8\">\n        {error && (\n          <div className=\"flex items-center rounded-md bg-red-50 p-4 text-red-700\" role=\"alert\">\n            <AlertCircle className=\"h-5 w-5 text-red-600 mt-0.5 flex-shrink-0\" />\n            <div>\n              <h5 className=\"text-red-800 font-medium\">Error</h5>\n              <p className=\"text-red-600 text-sm\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        <Card className=\"border-green-100 shadow-sm\">\n          <CardHeader className=\"bg-green-50 border-b border-green-100\">\n            <CardTitle className=\"text-2xl text-green-800\">Check Your Symptoms</CardTitle>\n            <CardDescription className=\"text-green-700\">\n              Describe your symptoms to get AI-powered analysis and recommendations.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"pt-6\">\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-2 mb-6\">\n                <TabsTrigger value=\"describe\">Describe Symptoms</TabsTrigger>\n                <TabsTrigger value=\"results\" disabled={!analysis}>\n                  Results\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"describe\" className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-medium mb-3\">Common Symptoms</h3>\n                  <div className=\"flex flex-wrap gap-2 mb-6\">\n                    {commonSymptoms.map((symptom, index) => (\n                      <Button\n                        key={index}\n                        variant=\"outline\"\n                        className=\"border-green-200 hover:bg-green-50 hover:border-green-300\"\n                        onClick={() => handleSymptomClick(symptom.name)}\n                      >\n                        {symptom.icon}\n                        <span className=\"ml-2\">{symptom.name}</span>\n                      </Button>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"symptoms\" className=\"text-lg font-medium\">\n                    Describe your symptoms in detail\n                  </label>\n                  <Textarea\n                    id=\"symptoms\"\n                    placeholder=\"Example: I've had a headache for 2 days, along with a mild fever and sore throat...\"\n                    className=\"min-h-32 text-base\"\n                    value={symptoms}\n                    onChange={(e) => setSymptoms(e.target.value)}\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    Include when symptoms started, their severity, and any other relevant information.\n                  </p>\n                </div>\n\n                <Button\n                  className=\"w-full bg-green-600 hover:bg-green-700 text-lg py-6\"\n                  onClick={analyzeSymptoms}\n                  disabled={!symptoms.trim() || isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                      Analyzing Symptoms...\n                    </>\n                  ) : (\n                    \"Analyze My Symptoms\"\n                  )}\n                </Button>\n              </TabsContent>\n\n              <TabsContent value=\"results\" className=\"space-y-6\">\n                {analysis && (\n                  <>\n                    <Card className=\"border-green-100\">\n                      <CardHeader className={`border-b ${getSeverityColor(analysis.severity)}`}>\n                        <CardTitle className=\"text-xl\">Analysis Results</CardTitle>\n                        <CardDescription>\n                          Severity Level: <span className=\"font-medium\">{analysis.severity.toUpperCase()}</span>\n                        </CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"pt-6 space-y-6\">\n                        <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n                          <p className=\"text-yellow-800 font-medium\">\n                            This is an AI-powered analysis, not a medical diagnosis. Always consult with a healthcare professional.\n                          </p>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                          <div>\n                            <h3 className=\"font-medium mb-2\">Possible Conditions:</h3>\n                            <ul className=\"list-disc pl-5 space-y-1\">\n                              {analysis.possibleConditions.map((condition, index) => (\n                                <li key={index}>{condition}</li>\n                              ))}\n                            </ul>\n                          </div>\n\n                          <div>\n                            <h3 className=\"font-medium mb-2\">Recommendations:</h3>\n                            <ul className=\"list-disc pl-5 space-y-1\">\n                              {analysis.recommendations.map((recommendation, index) => (\n                                <li key={index}>{recommendation}</li>\n                              ))}\n                            </ul>\n                          </div>\n\n                          <div>\n                            <h3 className=\"font-medium mb-2\">Urgency Level:</h3>\n                            <p className=\"pl-5\">{analysis.urgencyLevel}</p>\n                          </div>\n\n                          <div>\n                            <h3 className=\"font-medium mb-2\">Recommended Doctor Types:</h3>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {analysis.recommendedDoctorTypes.map((doctorType, index) => (\n                                <span\n                                  key={index}\n                                  className=\"px-3 py-1 bg-green-50 text-green-700 border border-green-200 rounded-full text-sm\"\n                                >\n                                  {doctorType}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                      <CardFooter className=\"flex justify-end gap-4 pt-6\">\n                        <Button\n                          variant=\"outline\"\n                          className=\"border-green-200\"\n                          onClick={() => setActiveTab(\"describe\")}\n                        >\n                          Check Another Symptom\n                        </Button>\n                        <Button\n                          className=\"bg-green-600 hover:bg-green-700\"\n                          asChild\n                        >\n                          <Link href=\"/appointments\">Book Appointment</Link>\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </>\n                )}\n              </TabsContent>\n            </Tabs>\n          </CardContent>\n        </Card>\n      </div>\n    </main>\n  )\n}\n\nconst getSeverityColor = (severity: 'low' | 'medium' | 'high') => {\n  switch (severity) {\n    case 'low':\n      return 'border-green-100';\n    case 'medium':\n      return 'border-yellow-100';\n    case 'high':\n      return 'border-red-100';\n    default:\n      return 'border-gray-100';\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}
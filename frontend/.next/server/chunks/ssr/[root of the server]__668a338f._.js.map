{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/okay/okay/frontend/components/ui/theme-provider.tsx"],"sourcesContent":["// components/theme-provider.tsx\r\n\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\r\nimport { type ThemeProviderProps } from \"next-themes\"\r\n\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}"],"names":[],"mappings":"AAAA,gCAAgC;;;;;AAIhC;AAHA;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,8OAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file://D%3A/okay/okay/frontend/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBRyWzGl9drPADQ1XrNgxL20V5tiD99Xxo\",\n  authDomain: \"help-c0571.firebaseapp.com\",\n  projectId: \"help-c0571\",\n  storageBucket: \"help-c0571.firebasestorage.app\",\n  messagingSenderId: \"600652981510\",\n  appId: \"1:600652981510:web:ce19bd0e00974a378d2a87\"\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\nconst auth = getAuth(app);\n\nexport { app, auth };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,IAAI,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACjF,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://D%3A/okay/okay/frontend/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport {\n  Auth,\n  User,\n  UserCredential,\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  signInWithPhoneNumber,\n  signInWithPopup,\n  signOut,\n  GoogleAuthProvider,\n  RecaptchaVerifier,\n  ConfirmationResult,\n  PhoneAuthProvider,\n  signInWithCredential,\n} from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signInWithGoogle: () => Promise<UserCredential>;\n  startPhoneSignIn: (phoneNumber: string) => Promise<string>;\n  confirmPhoneSignIn: (verificationId: string, code: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      const result = await signInWithEmailAndPassword(auth, email, password);\n      setUser(result.user);\n    } catch (error: any) {\n      throw new Error(error.message);\n    }\n  };\n\n  const signUp = async (email: string, password: string) => {\n    try {\n      const result = await createUserWithEmailAndPassword(auth, email, password);\n      setUser(result.user);\n    } catch (error: any) {\n      if (error.code === 'auth/email-already-in-use') {\n        throw new Error('This email is already registered. Please try logging in instead.');\n      }\n      throw new Error(error.message);\n    }\n  };\n\n  const signInWithGoogle = async (): Promise<UserCredential> => {\n    try {\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      setUser(result.user);\n      return result;\n    } catch (error: any) {\n      throw new Error(error.message);\n    }\n  };\n\n  const startPhoneSignIn = async (phoneNumber: string): Promise<string> => {\n    try {\n      if (!window.recaptchaVerifier) {\n        window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\n          size: 'invisible',\n        });\n      }\n      const verifier = window.recaptchaVerifier;\n      const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, verifier);\n      return confirmationResult.verificationId;\n    } catch (error: any) {\n      if (window.recaptchaVerifier) {\n        window.recaptchaVerifier.clear();\n        window.recaptchaVerifier = null;\n      }\n      throw new Error(error.message);\n    }\n  };\n\n  const confirmPhoneSignIn = async (verificationId: string, code: string): Promise<void> => {\n    try {\n      const credential = PhoneAuthProvider.credential(verificationId, code);\n      const result = await signInWithCredential(auth, credential);\n      setUser(result.user);\n    } catch (error: any) {\n      throw new Error(error.message);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n    } catch (error: any) {\n      throw new Error(error.message);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      loading,\n      signIn,\n      signUp,\n      signInWithGoogle,\n      startPhoneSignIn,\n      confirmPhoneSignIn,\n      logout,\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}
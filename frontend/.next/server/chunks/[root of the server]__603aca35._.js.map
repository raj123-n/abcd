{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://D%3A/okay/frontend/backend/config/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = 'mongodb://127.0.0.1:27017/swasthya';\n\nconst connectDB = async () => {\n  try {\n    if (mongoose.connection.readyState >= 1) {\n      console.log('MongoDB connection already established');\n      return;\n    }\n\n    await mongoose.connect(MONGODB_URI);\n    console.log('MongoDB connected successfully to swasthya database');\n  } catch (error) {\n    console.error('MongoDB connection error:', error);\n    throw error; // Re-throw to handle in the API route\n  }\n};\n\nexport default connectDB;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,MAAM,YAAY;IAChB,IAAI;QACF,IAAI,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;YACvC,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,OAAO,sCAAsC;IACrD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file://D%3A/okay/frontend/backend/models/Appointment.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst appointmentSchema = new mongoose.Schema({\n  patientName: {\n    type: String,\n    required: true,\n  },\n  patientEmail: {\n    type: String,\n    required: true,\n  },\n  doctorEmail: {\n    type: String,\n    required: true,\n  },\n  appointmentDate: {\n    type: Date,\n    required: true,\n  },\n  appointmentTime: {\n    type: String,\n    required: true,\n  },\n  status: {\n    type: String,\n    enum: ['pending', 'confirmed', 'cancelled', 'completed'],\n    default: 'pending',\n  },\n  symptoms: {\n    type: String,\n    required: true,\n  },\n  diagnosis: {\n    type: String,\n    default: '',\n  },\n  prescription: {\n    type: String,\n    default: '',\n  },\n  notes: {\n    type: String,\n    default: '',\n  },\n}, {\n  timestamps: true,\n});\n\nconst Appointment = mongoose.models.Appointment || mongoose.model('Appointment', appointmentSchema);\n\nexport default Appointment;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC5C,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,cAAc;QACZ,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;IACZ;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;IACZ;IACA,QAAQ;QACN,MAAM;QACN,MAAM;YAAC;YAAW;YAAa;YAAa;SAAY;QACxD,SAAS;IACX;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,SAAS;IACX;IACA,cAAc;QACZ,MAAM;QACN,SAAS;IACX;IACA,OAAO;QACL,MAAM;QACN,SAAS;IACX;AACF,GAAG;IACD,YAAY;AACd;AAEA,MAAM,cAAc,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe;uCAElE","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file://D%3A/okay/frontend/app/api/appointments/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport connectDB from '@/backend/config/db';\nimport Appointment from '@/backend/models/Appointment';\n\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    await connectDB();\n    const updates = await request.json();\n    \n    const appointment = await Appointment.findByIdAndUpdate(\n      params.id,\n      { $set: updates },\n      { new: true }\n    ).lean();\n    \n    if (!appointment) {\n      return NextResponse.json(\n        { error: 'Appointment not found' },\n        { status: 404 }\n      );\n    }\n    \n    return NextResponse.json(appointment);\n  } catch (error) {\n    console.error('PUT Error:', error);\n    return NextResponse.json(\n      { error: 'Failed to update appointment' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    await connectDB();\n    \n    const appointment = await Appointment.findById(params.id).lean();\n    \n    if (!appointment) {\n      return NextResponse.json(\n        { error: 'Appointment not found' },\n        { status: 404 }\n      );\n    }\n    \n    return NextResponse.json(appointment);\n  } catch (error) {\n    console.error('GET Error:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch appointment' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    await connectDB();\n    \n    const appointment = await Appointment.findByIdAndDelete(params.id);\n    \n    if (!appointment) {\n      return NextResponse.json(\n        { error: 'Appointment not found' },\n        { status: 404 }\n      );\n    }\n    \n    return NextResponse.json({ message: 'Appointment deleted successfully' });\n  } catch (error) {\n    console.error('DELETE Error:', error);\n    return NextResponse.json(\n      { error: 'Failed to delete appointment' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,CAAA,GAAA,yHAAA,CAAA,UAAS,AAAD;QACd,MAAM,UAAU,MAAM,QAAQ,IAAI;QAElC,MAAM,cAAc,MAAM,kIAAA,CAAA,UAAW,CAAC,iBAAiB,CACrD,OAAO,EAAE,EACT;YAAE,MAAM;QAAQ,GAChB;YAAE,KAAK;QAAK,GACZ,IAAI;QAEN,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,CAAA,GAAA,yHAAA,CAAA,UAAS,AAAD;QAEd,MAAM,cAAc,MAAM,kIAAA,CAAA,UAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,IAAI;QAE9D,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,CAAA,GAAA,yHAAA,CAAA,UAAS,AAAD;QAEd,MAAM,cAAc,MAAM,kIAAA,CAAA,UAAW,CAAC,iBAAiB,CAAC,OAAO,EAAE;QAEjE,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAmC;IACzE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}